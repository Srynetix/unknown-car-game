[gd_scene load_steps=23 format=2]

[ext_resource path="res://assets/fonts/VG5000/VG5000-Regular.otf" type="DynamicFontData" id=1]
[ext_resource path="res://scenes/background/Background.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/screens/Game.cs" type="Script" id=3]
[ext_resource path="res://scenes/entities/Car.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/fx/MotionBlur.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/fx/Vignette.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/fx/Shockwave.tscn" type="PackedScene" id=7]
[ext_resource path="res://scenes/fx/GaussianBlur.tscn" type="PackedScene" id=8]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float angle_degrees;
uniform int samples = 10;
uniform float strength : hint_range(0, 0.02, 0.0001);

vec4 motionBlur(sampler2D sampler, vec2 uv, vec2 dir) {
  vec4 l = vec4(0);
  float delta = 1.0 / float(samples);
  for (float i = -1.0; i <= 1.0; i += delta) {
    l += texture(sampler, uv - vec2(dir.x * i, dir.y * i)).rgba;
  }
  
  return vec4(l * delta * 0.5);
}

void fragment() {
  float rad = radians(angle_degrees);
  vec2 blur_vector = vec2(cos(rad), sin(rad)) * strength;
  COLOR = motionBlur(SCREEN_TEXTURE, SCREEN_UV, blur_vector);
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/angle_degrees = 90.0
shader_param/samples = 10
shader_param/strength = 0.0

[sub_resource type="DynamicFont" id=3]
outline_size = 1
outline_color = Color( 1, 0, 0.913725, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=4]
size = 64
outline_size = 2
outline_color = Color( 0.215686, 0, 0.235294, 0.498039 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=5]
size = 32
outline_size = 1
outline_color = Color( 0.211765, 0, 0.309804, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="Animation" id=6]
resource_name = "idle"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("Instructions:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.1, 2.1, 3.1, 4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform float strength : hint_range(0, 0.1, 0.001) = 0;
uniform int samples = 11;

void fragment() {
  vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV);
  int pix_count = 1;
  float blur_step = strength / float(samples);
  for (int i = 1; i < samples; ++i) {
    float amount = blur_step * float(i);
    pix_count += 8;
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-amount, -amount));
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-amount, 0));
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-amount, amount));
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(0, -amount));
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(0, amount));
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(amount, -amount));
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(amount, 0));
    color += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(amount, amount));    
  }
  COLOR = color / float(pix_count);
}"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/strength = 0.0
shader_param/samples = 12

[sub_resource type="DynamicFont" id=9]
size = 64
outline_size = 2
outline_color = Color( 0, 0, 0, 0.498039 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=10]
size = 64
outline_size = 2
outline_color = Color( 0.231373, 0, 0, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=11]
size = 64
outline_size = 2
outline_color = Color( 0.756863, 0, 0, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="StyleBoxEmpty" id=12]

[sub_resource type="DynamicFont" id=13]
size = 64
outline_size = 2
outline_color = Color( 0.407843, 0.211765, 0.211765, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 1 )

[sub_resource type="Animation" id=14]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("You:margin_top")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 0.0647041, 0.0883883 ),
"update": 0,
"values": [ 450.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("You:margin_left")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ -200.0, -200.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Died:margin_left")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.7 ),
"transitions": PoolRealArray( 1, 0.0824693, 1 ),
"update": 0,
"values": [ 300.0, 300.0, 0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Play:margin_top")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.7, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, -150 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("GaussianBlur:material:shader_param/strength")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 0.025 ]
}

[node name="Game" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background" parent="." instance=ExtResource( 2 )]

[node name="Camera" type="Camera2D" parent="."]
anchor_mode = 0
current = true
__meta__ = {
"_edit_lock_": true
}

[node name="Obstacles" type="Node2D" parent="."]
__meta__ = {
"_edit_lock_": true
}

[node name="SpawnTimer" type="Timer" parent="."]
wait_time = 2.0
autostart = true

[node name="ChronoTimer" type="Timer" parent="."]
autostart = true

[node name="SpawnBlockingTimer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true
autostart = true

[node name="MotionBlur" parent="." instance=ExtResource( 5 )]
material = SubResource( 2 )

[node name="Car" parent="." instance=ExtResource( 4 )]
position = Vector2( 226.288, 669.937 )

[node name="Vignette" parent="." instance=ExtResource( 6 )]
margin_top = -9.0
margin_bottom = 11.0

[node name="BackBufferCopy" type="BackBufferCopy" parent="."]
copy_mode = 2
__meta__ = {
"_edit_lock_": true
}

[node name="Shockwave" parent="." instance=ExtResource( 7 )]

[node name="UI" type="CanvasLayer" parent="."]

[node name="Speed" type="Label" parent="UI"]
visible = false
margin_left = 237.523
margin_top = 726.388
margin_right = 317.523
margin_bottom = 765.388
custom_fonts/font = SubResource( 3 )
text = "Speed"
align = 1
valign = 1
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Time" type="Label" parent="UI"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -38.0
margin_top = -38.5
margin_right = 38.0
margin_bottom = 38.5
rect_pivot_offset = Vector2( 38, 38 )
custom_fonts/font = SubResource( 4 )
custom_colors/font_color = Color( 1, 1, 1, 0.498039 )
text = "0"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Instructions" type="RichTextLabel" parent="UI"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -165.0
custom_fonts/normal_font = SubResource( 5 )
custom_colors/default_color = Color( 0.305882, 0.0117647, 0.403922, 1 )
bbcode_enabled = true
bbcode_text = "[center]Touch screen to [rainbow]accelerate[/rainbow]
Drag to move left and right[/center]"
text = "Touch screen to accelerate
Drag to move left and right"
fit_content_height = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="UI"]
autoplay = "idle"
anims/idle = SubResource( 6 )

[node name="GameOver" type="CanvasLayer" parent="."]

[node name="GaussianBlur" parent="GameOver" instance=ExtResource( 8 )]
material = SubResource( 8 )

[node name="Score" type="Label" parent="GameOver"]
anchor_right = 1.0
margin_bottom = 77.0
custom_fonts/font = SubResource( 9 )
custom_colors/font_color = Color( 0, 0.890196, 0.0784314, 0.498039 )
text = "0$"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="You" type="Label" parent="GameOver"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -200.0
margin_top = 450.0
custom_fonts/font = SubResource( 10 )
custom_colors/font_color = Color( 0.647059, 0, 0, 1 )
text = "YOU"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Died" type="Label" parent="GameOver"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = 300.0
custom_fonts/font = SubResource( 11 )
text = "DIED! :("
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Play" type="Button" parent="GameOver"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -159.5
custom_styles/focus = SubResource( 12 )
custom_fonts/font = SubResource( 13 )
custom_colors/font_color = Color( 0.443137, 0.313726, 0.501961, 1 )
shortcut_in_tooltip = false
text = "Play again"
flat = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="GameOver"]
anims/idle = SubResource( 14 )
